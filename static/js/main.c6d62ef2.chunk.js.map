{"version":3,"sources":["components/Film.js","config.js","utils.js","components/FilmList.js","index.js"],"names":["Film","props","sx","textAlign","width","component","display","overflow","height","film","title","src","image","alt","variant","aria-label","href","encodeURIComponent","target","_config","backend_url","cacheStore","key","value","entry","timestamp","Date","now","window","localStorage","setItem","JSON","stringify","cacheRetrieve","cached","getItem","parse","FilmList","useState","filmList","setFilmList","isLoaded","setLoaded","getFilmsFromNetwork","a","fetch","config","response","data","json","console","error","message","getFilms","filmsFromCache","filmsFromNetwork","films","useEffect","loadFilms","backgroundColor","container","spacing","maxWidth","marginLeft","marginRight","map","index","item","xs","sm","md","lg","xl","ReactDOM","render","document","getElementById"],"mappings":"sXAGe,SAASA,EAAKC,GACzB,OACI,kBAAC,IAAD,CAAWC,GAAI,CAACC,UAAW,SAAUC,MAAO,SACxC,kBAAC,IAAD,CAASC,UAAU,KAAKH,GAAI,CAACI,QAAS,cAAe,qBAAsB,IAAK,kBAAmB,WAAYC,SAAU,SAAUC,OAAQ,QAAS,cAAe,UAAWP,EAAMQ,KAAKC,OACzL,yBAAKC,IAAG,UAAKV,EAAMQ,KAAKG,OAASC,IAAI,UACrC,kBAAC,IAAD,CAAaC,QAAQ,WACrB,kBAAC,IAAD,CAAiBA,QAAQ,YAAYC,aAAW,iCAC5C,kBAAC,IAAD,CAAYC,KAAI,gDAA2CC,mBAAmBhB,EAAMQ,KAAKC,QAAUQ,OAAO,UAA1G,OACA,kBAAC,IAAD,CAAYF,KAAI,kCAA6BC,mBAAmBhB,EAAMQ,KAAKC,OAA3D,OAAwEQ,OAAO,UAA/F,W,YCTD,GACX,kBACI,OAAOC,EAAQC,cCHhB,SAASC,EAAWC,EAAKC,GAC5B,IAAIC,EAAQ,CACRC,UAAWC,KAAKC,MAChBJ,MAAOA,GAEXK,OAAOC,aAAaC,QAAQR,EAAKS,KAAKC,UAAUR,IAG7C,SAASS,EAAcX,GAC1B,IAAIY,EAASN,OAAOC,aAAaM,QAAQb,GACzC,GAAc,MAAVY,EACA,OAAO,KAEX,IAAIV,EAAQO,KAAKK,MAAMF,GACvB,OAAQR,KAAKC,MAAQH,EAAMC,UAAY,MAAW,KAAOD,EAAMD,MCTpD,SAASc,EAASpC,GAC7B,MAAgCqC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAiBC,EAAjB,KAFoC,SAIrBC,IAJqB,2EAIpC,8BAAAC,EAAA,+EAE+BC,MAAMC,EAAO1B,aAF5C,OAEc2B,EAFd,OAGYC,EAAOD,EAASE,OAH5B,uDAKQC,QAAQC,MAAM,KAAMC,SAL5B,kBAMe,MANf,iCAQWJ,GARX,0DAJoC,+BAerBK,IAfqB,2EAepC,8BAAAT,EAAA,yDAE0B,OADhBU,EAAiBrB,EAAc,aADzC,yCAGeqB,GAHf,uBAKmCX,IALnC,cAM4B,OADlBY,EALV,SAOQlC,EAAW,WAAYkC,GAP/B,kBASWA,GATX,4CAfoC,kEA2BpC,4BAAAX,EAAA,sEACwBS,IADxB,OACUG,EADV,OAEId,GAAU,GACVF,EAAYgB,GAHhB,4CA3BoC,sBAqCpC,OAJAC,qBAAU,YAjC0B,mCAkChCC,KACD,IAEEjB,EAKD,kBAAC,IAAD,CAASvC,GAAI,CAAEyD,gBAAiB,cAC5B,kBAAC,IAAD,CAAUC,WAAS,EAACC,QAAS,EAAGC,SAAS,KAAK5D,GAAI,CAAE6D,WAAY,OAAQC,YAAa,SAChFzB,EAAS0B,KAAI,SAACxD,EAAMyD,GAAP,OACd,kBAAC,IAAD,CAAUC,MAAI,EAAC7C,IAAK4C,EAAOE,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG,kBAACxE,EAAD,CAAMS,KAAMA,EAAMyD,MAAOA,EAAM,UAP9F,uCCtChBO,IAASC,OACL,kBAACrC,EAAD,MACAsC,SAASC,eAAe,W","file":"static/js/main.c6d62ef2.chunk.js","sourcesContent":["import React from 'react';\nimport * as mui from '@mui/material';\n\nexport default function Film(props) {\n    return (\n        <mui.Paper sx={{textAlign: 'center', width: '15em'}}>\n            <mui.Box component=\"h3\" sx={{display: \"-webkit-box\", \"-webkit-line-clamp\": \"2\", \"-moz-box-orient\": \"vertical\", overflow: \"hidden\", height: \"2.2em\", \"line-height\": \"1.1em\"}}>{props.film.title}</mui.Box>\n            <img src={`${props.film.image}`} alt=\"image\" />\n            <mui.Divider variant=\"middle\" />\n            <mui.ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n                <mui.Button href={`https://thepiratebay.org/search.php?q=${encodeURIComponent(props.film.title)}`} target=\"_blank\">TPB</mui.Button>\n                <mui.Button href={`https://1337x.to/search/${encodeURIComponent(props.film.title)}/1/`} target=\"_blank\">1337x</mui.Button>\n                {/*<mui.Button>Magnet</mui.Button>*/}\n            </mui.ButtonGroup>\n        </mui.Paper>\n    );\n}\n","import _config from \"./config.json\";\n\nexport default {\n    get backend_url() {\n        return _config.backend_url\n    }\n}\n","\nexport function cacheStore(key, value) {\n    let entry = {\n        timestamp: Date.now(),\n        value: value\n    };\n    window.localStorage.setItem(key, JSON.stringify(entry));\n}\n\nexport function cacheRetrieve(key) {\n    let cached = window.localStorage.getItem(key);\n    if (cached == null) {\n        return null;\n    }\n    let entry = JSON.parse(cached);\n    return (Date.now() - entry.timestamp > 86400000)? null : entry.value;\n}\n","import React, {useEffect, useState} from 'react';\nimport * as mui from '@mui/material';\nimport Film from './Film';\nimport config from 'config.js';\nimport {cacheStore, cacheRetrieve} from 'utils.js';\n\nexport default function FilmList(props) {\n    const [filmList, setFilmList] = useState([]);\n    const [isLoaded, setLoaded] = useState(false);\n\n    async function getFilmsFromNetwork() {\n        try {\n            const response = await fetch(config.backend_url);\n            var data = response.json();\n        } catch(error) {\n            console.error(error.message);\n            return null;\n        }\n        return data;\n    }\n\n    async function getFilms() {\n        const filmsFromCache = cacheRetrieve('FilmList');\n        if (filmsFromCache != null) {\n            return filmsFromCache;\n        }\n        const filmsFromNetwork = await getFilmsFromNetwork();\n        if (filmsFromNetwork != null) {\n            cacheStore('FilmList', filmsFromNetwork);\n        }\n        return filmsFromNetwork;\n    }\n\n    async function loadFilms() {\n        const films = await getFilms();\n        setLoaded(true);\n        setFilmList(films);\n    }\n\n    useEffect(() => {\n        loadFilms();\n    }, []);\n\n    if (!isLoaded) {\n        return (<h1>Loading</h1>);\n    }\n\n    return (\n        <mui.Box sx={{ backgroundColor: 'LightGrey'}}>\n            <mui.Grid container spacing={2} maxWidth=\"xl\" sx={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                {filmList.map((film, index) =>\n                <mui.Grid item key={index} xs={12} sm={6} md={4} lg={3} xl={2}><Film film={film} index={index+1}/></mui.Grid>\n                )}\n            </mui.Grid>\n        </mui.Box>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FilmList from './components/FilmList.js'\n\n\nReactDOM.render(\n    <FilmList />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
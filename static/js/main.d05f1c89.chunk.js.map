{"version":3,"sources":["components/SearchBox.js","components/Film.js","config.js","utils.js","components/FilmList.js","index.js"],"names":["SearchBox","props","useState","searchTerm","setSearchTerm","search","window","location","href","sx","p","display","alignItems","width","ml","flex","placeholder","inputProps","onKeyDown","e","keyCode","onChange","target","value","aria-label","onClick","Film","textAlign","component","overflow","height","film","title","src","image","alt","variant","encodeURIComponent","_config","backend_url","cacheStore","key","entry","timestamp","Date","now","localStorage","setItem","JSON","stringify","cacheRetrieve","cached","getItem","parse","getFilmsFromNetwork","a","fetch","config","response","data","json","console","error","message","getFilms","filmsFromCache","filmsFromNetwork","FilmList","filmList","setFilmList","isLoaded","setLoaded","useEffect","films","loadFilms","container","spacing","maxWidth","marginLeft","marginRight","map","index","item","xs","sm","md","lg","xl","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d05f1c89.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport * as mui from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\n\nexport default function SearchBox(props) {\n\n    const [searchTerm, setSearchTerm] = useState('');\n\n    function search() {\n        window.location.href = `https://duckduckgo.com/?q=${searchTerm}`;\n    }\n\n    function keyPress(e){\n        if(e.keyCode === 13){\n           search();\n        }\n    }\n\n    function handleChange(e) {\n        setSearchTerm(e.target.value);\n    }\n\n    return (\n        <mui.Paper sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}>\n          <mui.InputBase\n            sx={{ ml: 1, flex: 1 }}\n            placeholder=\"Search the Web\"\n            inputProps={{ 'aria-label': 'search' }}\n            onKeyDown={keyPress}\n            onChange={handleChange}\n          />\n          <mui.IconButton sx={{ p: '10px' }} aria-label=\"search\" onClick={search}>\n            <SearchIcon />\n          </mui.IconButton>\n        </mui.Paper>\n      );\n}\n","import React from 'react';\nimport * as mui from '@mui/material';\n\nexport default function Film(props) {\n    return (\n        <mui.Paper sx={{textAlign: 'center', width: '15em'}}>\n            <mui.Box component=\"h3\" sx={{display: \"-webkit-box\", \"-webkit-line-clamp\": \"2\", \"-moz-box-orient\": \"vertical\", overflow: \"hidden\", height: \"2.2em\", \"line-height\": \"1.1em\"}}>{props.film.title}</mui.Box>\n            <img src={`${props.film.image}`} alt=\"poster\" />\n            <mui.Divider variant=\"middle\" />\n            <mui.ButtonGroup variant=\"contained\" aria-label=\"outlined primary button group\">\n                <mui.Button href={`https://thepiratebay.org/search.php?q=${encodeURIComponent(props.film.title)}`} target=\"_blank\">TPB</mui.Button>\n                <mui.Button href={`https://1337x.to/search/${encodeURIComponent(props.film.title)}/1/`} target=\"_blank\">1337x</mui.Button>\n                {/*<mui.Button>Magnet</mui.Button>*/}\n            </mui.ButtonGroup>\n        </mui.Paper>\n    );\n}\n","import _config from \"./config.json\";\n\nexport default {\n    get backend_url() {\n        return _config.backend_url\n    }\n}\n","import config from 'config.js';\n\n\nfunction cacheStore(key, value) {\n    let entry = {\n        timestamp: Date.now(),\n        value: value\n    };\n    window.localStorage.setItem(key, JSON.stringify(entry));\n}\n\nfunction cacheRetrieve(key) {\n    let cached = window.localStorage.getItem(key);\n    if (cached == null) {\n        return null;\n    }\n    let entry = JSON.parse(cached);\n    return (Date.now() - entry.timestamp > 86400000)? null : entry.value;\n}\n\nasync function getFilmsFromNetwork() {\n    try {\n        const response = await fetch(config.backend_url);\n        var data = response.json();\n    } catch(error) {\n        console.error(error.message);\n        return null;\n    }\n    return data;\n}\n\nexport async function getFilms() {\n    const filmsFromCache = cacheRetrieve('FilmList');\n    if (filmsFromCache != null) {\n        return filmsFromCache;\n    }\n    const filmsFromNetwork = await getFilmsFromNetwork();\n    if (filmsFromNetwork != null) {\n        cacheStore('FilmList', filmsFromNetwork);\n    }\n    return filmsFromNetwork;\n}\n","import React, {useEffect, useState} from 'react';\nimport * as mui from '@mui/material';\nimport Film from './Film';\nimport {getFilms} from 'utils.js';\n\nexport default function FilmList(props) {\n    const [filmList, setFilmList] = useState([]);\n    const [isLoaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        async function loadFilms() {\n            const films = await getFilms();\n            setLoaded(true);\n            setFilmList(films);\n        }\n        loadFilms();\n    }, []);\n\n    if (!isLoaded) {\n        return (\n            <mui.Box sx={{ display: 'flex' }}>\n                <mui.CircularProgress sx={{ marginLeft: 'auto', marginRight:  'auto', marginTop: '3em'}}/>\n            </mui.Box>\n        );\n    }\n\n    return (\n            <mui.Grid container spacing={2} maxWidth=\"xl\" sx={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                {filmList.map((film, index) =>\n                <mui.Grid item key={index} xs={12} sm={6} md={4} lg={3} xl={2}><Film film={film} index={index+1}/></mui.Grid>\n                )}\n            </mui.Grid>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as mui from '@mui/material';\nimport SearchBox from './components/SearchBox.js';\nimport FilmList from './components/FilmList.js';\n\nReactDOM.render(\n    <mui.Box>\n        <SearchBox/>\n        <FilmList/>\n    </mui.Box>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}